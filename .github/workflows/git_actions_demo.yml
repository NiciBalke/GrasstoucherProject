name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: 
  pull_request:

jobs:

  c-Tests:
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v3

     - name: install CUnit
       run: sudo apt-get update && sudo apt-get install -y libcunit1-dev make gcc

     - name: build & run tests
       run: make run_tests
  c-Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: install dependencies
        run: |
            sudo apt-get update
            sudo apt-get install -y clang-tidy libcunit1-dev gcc make curl bear
      
      - name: Generate compile_commands.json
        run: bear -- make
      
      - name: Run clang-tidy on all C files
        run: |
          find . -name "*.c" -print0 | xargs -0 clang-tidy -p . -quiet


#  c-Lint-mark-diff:
#      runs-on: ubuntu-latest
#      steps:
#        - uses: actions/checkout@v3
#
#        - name: Install dependencies
#          run: |
#            sudo apt-get update
#            sudo apt-get install -y clang-tidy libcunit1-dev gcc make curl bear
#
#        - name: Install reviewdog
#          run: |
#            curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b $HOME/.local/bin
#
#        - name: Verify reviewdog
#          run: reviewdog -version
#
#        - name: Generate compile_commands.json
#          run: bear -- make
#
#        - name: Run clang-tidy on all C files
#          env:
#            REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.REVIEWDOG_GITHUB_API_TOKEN }}
#          run: |
#            find . -name "*.c" -print0 | xargs -0 clang-tidy -p . -quiet \
#            | reviewdog -f=efm \
#                -efm="%f:%l:%c: %t: %m" \
#                -name="clang-tidy" \
#               -reporter=github-pr-check \
#                -level=warning


  web-Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js

        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install linters

        run: npm install --save-dev eslint stylelint eslint-formatter-github

      - name: Run ESLint (JS)
        run: npx eslint "**/*.js" --format stylish #|| true


      #- name: Run Stylelint (CSS)
      #  run: stylelint "**/*.css" #|| true

      #- run: echo "linting done"


  summary-job:
    runs-on: ubuntu-latest

    # collect logs from the other jobs and aggregate them here
    steps:
      - run: echo "coming soon"
        

